graph LR
    express[express] -- requires --> json[express.json()]
    express -- requires --> static[express.static('public')]
    express -- uses --> groq[Groq]
    express -- listens on --> port[PORT]
    groq -- has --> apiKey[apiKey (environment variable)]
    app[app] --> post[app.post('/generate-diagram', ...)]
    post --> req[req]
    post --> res[res]
    req -- has --> body[body]
    body -- has --> query[query]
    post --> groq_req[groq request]
    groq_req --> chat[chat.completions.create]
    chat --> messages[messages]
    messages -- contains --> system[system message]
    system --> content[content: "You are an expert in creating Mermaid diagrams..."]
    messages -- contains --> user[user message]
    user --> content[content: query (from req.body.query)]
    chat --> model[model]
    model --> mixtral[mixtral-8x7b-32768]
    chat -- returns --> choice[choice]
    choice -- contains --> message[message]
    message -- contains --> content[content]
    content -- matches --> mermaid_code_match[mermaid code]
    mermaid_code_match --> mermaid_code[Mermaid code]
    message -- contains --> explanation[explanation]
    explanation --> explanation_text[Explanation text]
    post --> res_json[res.json({ diagram: mermaid_code, explanation: explanation_text })]